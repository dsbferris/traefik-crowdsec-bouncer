services:

  crowdsec-test:
    container_name: crowdsec-test
    hostname: crowdsec-test
    image: crowdsecurity/crowdsec:v1.5.2
    environment:
      COLLECTIONS: "crowdsecurity/nginx"
      GID: "${GID-1000}"
    healthcheck:
      test: ["CMD", "cscli", "version"]
      interval: 20s
      timeout: 2s
      retries: 5
      start_period: 10s
    volumes:
      - ./etc-crowdsec:/etc/crowdsec/
      - ./var-log-nginx:/var/log/nginx
      - ./var-lib-crowdsec-data:/var/lib/crowdsec/data/
    ports:
      - "59083:8080"

  traefik-test:
    container_name: traefik-test
    hostname: traefik-test
    image: traefik:v2.10.4
    depends_on:
      crowdsec-test:
        condition: service_healthy
    ports:
      # changed ports here to not interfere with my production traefik
      - "59080:80"    # http
      - "59088:8080"  # dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml

  bouncer-test:
    container_name: bouncer-test
    hostname: bouncer-test
    image: dsbferris/traefik-crowdsec-bouncer:v0.5.1
    depends_on:
      crowdsec-test:
        condition: service_healthy
    environment:
      #PORT: 8082
      CROWDSEC_BOUNCER_API_KEY: 40796d93c2958f9e58345514e67740e5
      CROWDSEC_AGENT_HOST: crowdsec-test:59083
    ports:
      - "59082:8080"

  whoami-test:
    container_name: whoami-test
    hostname: whoami-test
    image: traefik/whoami:latest
    labels:
      # Traefik routing to this service
      traefik.enable: true
      traefik.http.routers.whoami-test.rule: Host(`localhost`)
      traefik.http.routers.whoami-test.entrypoints: web

      # Create bouncer middleware
      traefik.http.middlewares.crowdsec-bouncer-test.forwardauth.address: http://bouncer-test:59082/api/v1/forwardAuth
      # Add middleware to router
      traefik.http.routers.whoami-test.middlewares: crowdsec-bouncer-test@docker
