services:
  traefik:
    image: traefik:v2.10.4
    container_name: "traefik-example"
    command:
#      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  whoami:
    image: traefik/whoami:latest
    container_name: "simple-service-example"
    labels:
      # Create bouncer middleware
      - "traefik.http.middlewares.crowdsec-bouncer.forwardauth.address=http://bouncer:8080/api/v1/forwardAuth"

      # Traefik routing to this service
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.middlewares=crowdsec-bouncer@docker"

  crowdsec:
    image: crowdsecurity/crowdsec:v1.5.2
    container_name: "crowdsec-example"
    environment:
      COLLECTIONS: "crowdsecurity/nginx"
      GID: "${GID-1000}"
    depends_on:
      - 'traefik'
    volumes:
      - crowdsec-db-example:/var/lib/crowdsec/data/
      - crowdsec-config-example:/etc/crowdsec/

  bouncer:
    image: dsbferris/traefik-crowdsec-bouncer:v0.5.1
    container_name: "bouncer-example"
    environment:
      CROWDSEC_BOUNCER_API_KEY: MyApiKey
      CROWDSEC_AGENT_HOST: crowdsec:8080

volumes:
  logs-example:
  crowdsec-db-example:
  crowdsec-config-example:
